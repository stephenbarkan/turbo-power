{#
    Button

    @param label = "" // what the button says. If omitted, use call() to define button HTML contents
    @param href = "" // if omitted, it'll be rendered as a button element
    @param type = "" // type styles
    @param size = "" // size styles
    @param attrs = {} // all other HTML attributes
#}

{% set typeClasses = {
    default: "bg-gray-200 hover:bg-gray-300",
    color: "bg-yellow-600 hover:bg-yellow-700"
} %}

{% set sizeClasses = {} %}

{%- macro button(
    props={
        label: null,
        href: null,
        type: "button",
        size: null
    },
    attrs={}
    ) -%}

    <{% if props.href %}a href="{{- props.href -}}"{% else %}button{% endif %}
        class="text-sm text-green-900 disabled:opacity-60 py-6 px-6 flex gap-2 justify-center items-center transition-all ease-fluid duration-75 rounded-base active:scale-[.985] cursor-pointer {{ attrs.class }} {% if attrs.disabled %}pointer-events-none{% endif %} {{ typeClasses[props.type] }} {{ sizeClasses[props.size] }}"

        {% for key, value in attrs %}
            {% if key != 'class' %}{{ key }}="{{ value }}"{% endif %}
        {% endfor %}
    >

        {%- if props.label -%}
            {{ props.label }}
        {%- else -%}
            {{ caller() | safe }}
        {%- endif -%}

    </{% if props.href %}a{% else %}button{% endif %}>

{%- endmacro -%}
